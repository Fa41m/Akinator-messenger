{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fahim\\\\OneDrive\\\\Desktop\\\\Akinator\\\\Akinator-messenger\\\\akinator-react\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar database = [{\n  \"name\": \"Ironman\",\n  \"human\": true,\n  \"youtube\": false,\n  \"movie\": true,\n  \"book\": true,\n  \"female\": false\n}, {\n  \"name\": \"Homer Simpson\",\n  \"human\": false,\n  \"youtube\": false,\n  \"movie\": true,\n  \"book\": false,\n  \"female\": false\n}];\nvar questiondatabase = [{\n  \"question\": \"Are they human?\",\n  \"id\": 0\n}, {\n  \"question\": \"Are they on youtube?\",\n  \"id\": 1\n}, {\n  \"question\": \"Are they in movies?\",\n  \"id\": 2\n}, {\n  \"question\": \"Are they in books?\",\n  \"id\": 3\n}, {\n  \"question\": \"Are they female?\",\n  \"id\": 4\n}];\nvar listdata = database.map(data => [data.human, data.youtube, data.movie, data.book, data.female]);\nvar count = 0;\nvar found = -1;\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: questiondatabase[count].question\n    };\n  }\n\n  render() {\n    if (count <= 4) {\n      this.state.question = questiondatabase[count].question;\n    } else {\n      this.state.question = \"Answer:\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass DatabaseEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      var name = event.target[0].value;\n      var answers = this.props.answers;\n      var newadd = {\n        \"name\": name.toString(),\n        \"human\": answers[0],\n        \"youtube\": answers[1],\n        \"movie\": answers[2],\n        \"book\": answers[3],\n        \"female\": answers[4]\n      };\n      database.push(newadd);\n      console.log(database);\n    };\n  }\n\n  render() {\n    console.log(\"reached\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Who were you thinking of?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: Array(5).fill(null)\n    };\n  }\n\n  handleInput(answer) {\n    var answers = this.state.answers.slice();\n    answers[count] = answer;\n    console.log(answers);\n    this.setState({\n      answers: answers,\n      count: count++\n    });\n\n    if (count >= 4) {\n      for (let i = 0; i < listdata.length; i++) {\n        if (found == -1) {\n          var check = 0;\n\n          for (let j = 0; j < 5; j++) {\n            if (listdata[i][j] == answers[j]) {\n              check++;\n            }\n\n            if (check == 5) {\n              var found = i;\n            }\n          }\n        }\n      }\n    }\n\n    if (check >= 5) {\n      console.log(database[found]);\n      return;\n    }\n\n    if (count > 4 && found == -1) {\n      console.log(\"ok\");\n    }\n  }\n\n  render() {\n    if (count > 4 && found == -1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        id: \"game\",\n        children: /*#__PURE__*/_jsxDEV(DatabaseEdit, {\n          answers: this.state.answers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            count: this.state.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => this.handleInput(true),\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => this.handleInput(false),\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 134,\n  columnNumber: 3\n}, this), document.getElementById('root')\n/* controls root container, essentially updates whole page */\n);","map":{"version":3,"sources":["C:/Users/fahim/OneDrive/Desktop/Akinator/Akinator-messenger/akinator-react/src/index.js"],"names":["React","ReactDOM","database","questiondatabase","listdata","map","data","human","youtube","movie","book","female","count","found","Question","Component","constructor","props","state","question","render","DatabaseEdit","handleSubmit","event","preventDefault","name","target","value","answers","newadd","toString","push","console","log","Game","Array","fill","handleInput","answer","slice","setState","i","length","check","j","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nvar database = [\r\n    { \"name\":\"Ironman\", \"human\":true, \"youtube\":false, \"movie\":true, \"book\":true, \"female\":false},\r\n    { \"name\":\"Homer Simpson\", \"human\":false, \"youtube\":false, \"movie\":true, \"book\":false, \"female\":false}\r\n]\r\nvar questiondatabase = [\r\n  { \"question\":\"Are they human?\", \"id\":0},\r\n  { \"question\":\"Are they on youtube?\", \"id\":1},\r\n  { \"question\": \"Are they in movies?\", \"id\":2},\r\n  { \"question\": \"Are they in books?\", \"id\":3},\r\n  { \"question\": \"Are they female?\", \"id\":4},\r\n]\r\nvar listdata = database.map(data => [data.human,data.youtube,data.movie,data.book,data.female])\r\nvar count = 0\r\nvar found = -1\r\nclass Question extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      question: questiondatabase[count].question\r\n    }\r\n    \r\n  }\r\n  render(){\r\n    if (count <= 4){\r\n      this.state.question = questiondatabase[count].question\r\n    }\r\n    else{\r\n      this.state.question = \"Answer:\"\r\n    }\r\n    return(\r\n      <div className=\"center\">\r\n        <h1>{this.state.question}</h1>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nclass DatabaseEdit extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  handleSubmit = (event) =>{\r\n    event.preventDefault()\r\n    var name = event.target[0].value\r\n    var answers = this.props.answers\r\n    var newadd = { \"name\":name.toString(), \"human\":answers[0],\"youtube\":answers[1],\"movie\":answers[2],\"book\":answers[3],\"female\":answers[4]}\r\n    database.push(newadd)\r\n    console.log(database)\r\n  }\r\n  render(){\r\n    console.log(\"reached\")\r\n    return(\r\n      <div>\r\n        <div className='center'>\r\n          <h1>Who were you thinking of?</h1>\r\n        </div>\r\n        <div className='center'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\"></input>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      answers: Array(5).fill(null),\r\n    }\r\n  }\r\n  handleInput(answer){\r\n    var answers = this.state.answers.slice()\r\n    answers[count] = answer\r\n    console.log(answers)\r\n    this.setState({\r\n      answers: answers,\r\n      count: count ++\r\n    })\r\n    if (count>=4){\r\n      for(let i=0;i<listdata.length;i++){\r\n        if (found == -1){\r\n          var check = 0\r\n          for(let j=0;j<5;j++){\r\n            if (listdata[i][j] == answers[j]){\r\n              check ++\r\n            }\r\n            if (check == 5){\r\n              var found = i\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (check >= 5){\r\n      console.log(database[found])\r\n      return\r\n    }\r\n    if (count > 4 && found == -1){\r\n      console.log(\"ok\")\r\n    }\r\n  }\r\n    render(){\r\n      if (count > 4 && found == -1){\r\n        return(\r\n          <div className=\"center\" id=\"game\">\r\n            <DatabaseEdit answers = {this.state.answers} />\r\n          </div>\r\n        )\r\n      }\r\n      else{\r\n        return(\r\n          <div>\r\n            <div className='center'>\r\n              <Question count = {this.state.count}/>\r\n            </div>\r\n            <div className='center'>\r\n              <button className='button' onClick={() => this.handleInput(true)}>True</button>\r\n              <button className='button' onClick={() => this.handleInput(false)}>False</button>\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root') /* controls root container, essentially updates whole page */\r\n)"]},"metadata":{},"sourceType":"module"}