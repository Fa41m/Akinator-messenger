{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fahim\\\\OneDrive\\\\Desktop\\\\Akinator\\\\Akinator-messenger\\\\akinator-react\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar database = [{\n  \"name\": \"Ironman\",\n  \"human\": true,\n  \"youtube\": false,\n  \"movie\": true,\n  \"book\": true,\n  \"female\": false\n}, {\n  \"name\": \"Homer Simpson\",\n  \"human\": false,\n  \"youtube\": false,\n  \"movie\": true,\n  \"book\": false,\n  \"female\": false\n}];\nvar listdata = database.map(data => [data.human, data.youtube, data.movie, data.book, data.female]);\nvar count = 0;\n\nclass Answers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      var check = 0;\n      var found = -1;\n      var answers = this.state.answers.slice();\n\n      if (count >= 4) {\n        for (let i = 0; i < listdata.length; i++) {\n          for (let j = 0; j < 5; j++) {\n            if (listdata[i][j].toString() == answers[j]) {\n              check++;\n            }\n\n            if (check == 5) {\n              var found = i;\n            }\n          }\n        }\n      }\n\n      if (check >= 5) {\n        console.log(database[found]);\n        return;\n      }\n\n      if (count > 4 && found == -1) {\n        console.log(\"Not in database\");\n        return;\n      }\n\n      answers[count] = event.target[0].value;\n      console.log(answers);\n      this.setState({\n        answers: answers,\n        count: count++\n      });\n    };\n\n    this.state = {\n      answers: Array(5).fill(null)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Answers, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this), document.getElementById('root')\n/* controls root container, essentially updates whole page */\n);","map":{"version":3,"sources":["C:/Users/fahim/OneDrive/Desktop/Akinator/Akinator-messenger/akinator-react/src/index.js"],"names":["React","ReactDOM","database","listdata","map","data","human","youtube","movie","book","female","count","Answers","Component","constructor","props","handleSubmit","event","preventDefault","check","found","answers","state","slice","i","length","j","toString","console","log","target","value","setState","Array","fill","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nvar database = [\r\n    { \"name\":\"Ironman\", \"human\":true, \"youtube\":false, \"movie\":true, \"book\":true, \"female\":false},\r\n    { \"name\":\"Homer Simpson\", \"human\":false, \"youtube\":false, \"movie\":true, \"book\":false, \"female\":false}\r\n]\r\nvar listdata = database.map(data => [data.human,data.youtube,data.movie,data.book,data.female])\r\nvar count = 0\r\nclass Answers extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      answers: Array(5).fill(null),\r\n    }\r\n  }\r\n  handleSubmit = (event) =>{\r\n    event.preventDefault()\r\n    var check = 0\r\n    var found = -1\r\n    var answers = this.state.answers.slice()\r\n    if (count>=4){\r\n      for(let i=0;i<listdata.length;i++){\r\n        for(let j=0;j<5;j++){\r\n          if (listdata[i][j].toString() == answers[j]){\r\n            check ++\r\n          }\r\n          if (check == 5){\r\n            var found = i\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (check >= 5){\r\n      console.log(database[found])\r\n      return\r\n    }\r\n    if (count > 4 && found == -1){\r\n      console.log(\"Not in database\")\r\n      return\r\n    }\r\n    answers[count] = event.target[0].value\r\n    console.log(answers)\r\n    this.setState({\r\n      answers: answers,\r\n      count: count ++\r\n    })\r\n  }\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>Question</label>\r\n              <input type=\"text\" id=\"input\"></input>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n  <Answers />,\r\n  document.getElementById('root') /* controls root container, essentially updates whole page */\r\n)"]},"metadata":{},"sourceType":"module"}